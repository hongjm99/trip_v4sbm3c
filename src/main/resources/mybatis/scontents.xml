<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="dev.mvc.tripcontents.TrContentsDAOInter">
  <!-- 등록한 레코드 갯수 1 리턴, #{adminno}: public int getAdminno() 호출됨 -->
  <insert id="create" parameterType="dev.mvc.tripcontents.TrContentsVO">
    INSERT INTO scontents(scontentsno, managerno, tripno, title, content, passwd, word,file1, file1saved, thumb1, size1, rdate)
    VALUES(scontents_seq.nextval, #{managerno}, #{tripno}, #{title}, #{content}, #{passwd}, #{word},#{file1}, #{file1saved}, #{thumb1}, #{size1}, sysdate)
  </insert>

  <!-- 모든 카테고리의 등록된 글목록 -->
  <select id="list_all" resultType="dev.mvc.tripcontents.TrContentsVO">
    SELECT scontentsno, managerno, tripno, title, content, recom, cnt, replycnt, passwd, word, rdate,
               file1, file1saved, thumb1, size1
    FROM scontents
    ORDER BY scontentsno DESC
  </select> 
         
  <!-- 특정 카테고리의 등록된 글목록 -->
  <select id="list_by_tripno" resultType="dev.mvc.tripcontents.TrContentsVO" parameterType="int">
    SELECT scontentsno, managerno, tripno, title, content, recom, cnt, replycnt, rdate,
              file1, file1saved, thumb1, size1
    FROM scontents 
    WHERE tripno = #{tripno}
    ORDER BY scontentsno DESC
  </select> 
  
  <!-- 일반적인 조회 -->
  <select id="read" resultType="dev.mvc.tripcontents.TrContentsVO" parameterType="int">
    SELECT scontentsno, managerno, tripno, title, content, recom, cnt, replycnt, passwd, word, rdate,
              file1, file1saved, thumb1, size1, map, youtube
    FROM scontents
    WHERE scontentsno = #{scontentsno}
  </select>
 
 <!-- map 등록, 수정, 삭제, 
         HashMap: VO 클래스는 변수가 너무 많아서 메모리 낭비가 발생함으로,
                       보통 3개 이하의 적은 변수만 전달하는 경우 HashMap 사용 권장 -->
  <update id="map" parameterType="HashMap">
    UPDATE scontents SET map=#{map} WHERE scontentsno=#{scontentsno}
  </update>
  
   <update id="youtube" parameterType="HashMap">
    UPDATE scontents SET youtube=#{youtube} WHERE scontentsno=#{scontentsno}
  </update>
  
  <!-- 카테고리별 검색 목록 -->
  <select id="list_by_tripno_search" resultType="dev.mvc.tripcontents.TrContentsVO" parameterType="HashMap">
    SELECT scontentsno, managerno, tripno, title, content, recom, cnt, replycnt, word, rdate,
            file1, file1saved, thumb1, size1, map, youtube
    FROM scontents
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
        WHERE tripno=#{tripno}
      </when>
      <otherwise> <!-- 검색하는 경우 -->
        WHERE tripno=#{tripno} AND (UPPER(title) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(content) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(word) LIKE '%' || UPPER(#{word}) || '%')
      </otherwise>
    </choose>
    ORDER BY scontentsno DESC   
  </select>
   
  <!-- 카테고리별 검색 레코드 갯수 -->
  <select id="search_count" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt
    FROM scontents
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우의 레코드 갯수 -->
        WHERE tripno=#{tripno}
      </when>
      <otherwise> <!-- 검색하는 경우의 레코드 갯수 -->
        WHERE tripno=#{tripno} AND (UPPER(title) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(content) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(word) LIKE '%' || UPPER(#{word}) || '%')
      </otherwise>
    </choose>
  </select>   
  
<!-- 카테고리별 검색 + 페이징 목록 -->
  <select id="list_by_tripno_search_paging" resultType="dev.mvc.tripcontents.TrContentsVO" parameterType="dev.mvc.tripcontents.TrContentsVO">
   SELECT scontentsno, managerno, tripno, title, content, recom, cnt, replycnt, rdate, file1, file1saved, thumb1, size1, map, youtube, r
   FROM (
              SELECT scontentsno, managerno, tripno, title, content, recom, cnt, replycnt, rdate, file1, file1saved, thumb1, size1, map, youtube, rownum as r
              FROM (
                        SELECT scontentsno, managerno, tripno, title, content, recom, cnt, replycnt, rdate, file1, file1saved, thumb1, size1, map, youtube
                        FROM scontents
                        <choose>
                          <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
                            WHERE tripno=#{tripno}
                          </when>
                          <otherwise>
                            WHERE tripno=#{tripno} AND (UPPER(title) LIKE '%' || UPPER(#{word}) || '%' 
                                                              OR UPPER(content) LIKE '%' || UPPER(#{word}) || '%' 
                                                              OR UPPER(word) LIKE '%' || UPPER(#{word}) || '%')
                          </otherwise>
                        </choose>
                        ORDER BY scontentsno DESC
               )
    )
    WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>
     
    <!-- 1 page: WHERE r >= 1 AND r <= 10; 
          2 page: WHERE r >= 11 AND r <= 20;
          3 page: WHERE r >= 21 AND r <= 30; -->
  </select>
  
  <!-- 패스워드 검사 -->
  <select id="password_check" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt 
    FROM scontents
    WHERE scontentsno = #{scontentsno} AND passwd=#{passwd}
  </select>
  
   <!-- 글 수정 -->
  <update id="update_text" parameterType="dev.mvc.tripcontents.TrContentsVO">
    UPDATE scontents
    SET title=#{title}, content=#{content},  word=#{word}
    WHERE scontentsno = #{scontentsno}
  </update>
  
    <!-- 파일 수정 -->
  <update id="update_file" parameterType="dev.mvc.tripcontents.TrContentsVO">
    UPDATE scontents
    SET file1=#{file1}, file1saved=#{file1saved}, thumb1=#{thumb1}, size1=#{size1}
    WHERE scontentsno = #{scontentsno}
  </update>
  
  <delete id="delete" parameterType="int">
    DELETE FROM scontents
    WHERE scontentsno=#{scontentsno}
  </delete>
  
  <!-- 특정 카테고리에 속한 레코드 갯수를 리턴 -->
  <select id="count_by_tripno" resultType="int" parameterType="int">
    SELECT COUNT(*) as cnt 
    FROM scontents 
    WHERE tripno=#{tripno}
  </select>
  
  <!-- 특정 카테고리에 속한 모든 레코드 삭제 -->
  <delete id="delete_by_tripno" parameterType="int">
    DELETE FROM scontents
    WHERE tripno=#{tripno}
  </delete>
  </mapper>
